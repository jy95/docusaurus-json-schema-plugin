"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[1338,8811],{60431:(n,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>u,toc:()=>C});var i=s(24246),t=s(11151),e=s(60614),o=s(78811),r=s(47718),m=s.n(r);const c={description:"array with contains / minContains / maxContains showcase",title:"\ud83d\udcca minContains & maxContains"},d="minContains & maxContains",u={unversionedId:"demo-viewer/array/minContainsAndMaxContains",id:"demo-viewer/array/minContainsAndMaxContains",title:"\ud83d\udcca minContains & maxContains",description:"array with contains / minContains / maxContains showcase",source:"@site/docs/demo-viewer/array/minContainsAndMaxContains.mdx",sourceDirName:"demo-viewer/array",slug:"/demo-viewer/array/minContainsAndMaxContains",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/minContainsAndMaxContains",draft:!1,unlisted:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/demo-viewer/array/minContainsAndMaxContains.mdx",tags:[],version:"current",frontMatter:{description:"array with contains / minContains / maxContains showcase",title:"\ud83d\udcca minContains & maxContains"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd0 Length",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/length"},next:{title:"\ud83d\udfe6 Simple",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/simple"}},l={},C=[];function h(n){const a=Object.assign({h1:"h1",p:"p"},(0,t.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"mincontains--maxcontains",children:"minContains & maxContains"}),"\n",(0,i.jsx)(a.p,{children:"JSON Schema :"}),"\n",(0,i.jsx)(e.default,{language:"json",children:JSON.stringify(o,null,2)}),"\n",(0,i.jsx)(a.p,{children:"Viewer :"}),"\n",(0,i.jsx)(m(),{schema:o})]})}const p=function(n={}){const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?(0,i.jsx)(a,Object.assign({},n,{children:(0,i.jsx)(h,n)})):h(n)}},78811:n=>{n.exports=JSON.parse('{"type":"array","contains":{"type":"number"},"minContains":2,"maxContains":3}')}}]);