"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[7623],{4671:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>l,toc:()=>u});var n=o(87462),a=(o(27378),o(3905)),r=o(74866),i=o(85162);const d={title:"\ud83d\udd27 @theme/MonacoEditor",description:"@theme/MonacoEditor API"},c=void 0,l={unversionedId:"api/MonacoEditor",id:"api/MonacoEditor",title:"\ud83d\udd27 @theme/MonacoEditor",description:"@theme/MonacoEditor API",source:"@site/docs/api/MonacoEditor.mdx",sourceDirName:"api",slug:"/api/MonacoEditor",permalink:"/docusaurus-json-schema-plugin/docs/api/MonacoEditor",draft:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/api/MonacoEditor.mdx",tags:[],version:"current",frontMatter:{title:"\ud83d\udd27 @theme/MonacoEditor",description:"@theme/MonacoEditor API"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd0e @theme/JSONSchemaViewer",permalink:"/docusaurus-json-schema-plugin/docs/api/JSONSchemaViewer"},next:{title:"\u2753 FAQ",permalink:"/docusaurus-json-schema-plugin/docs/faq"}},s={},u=[{value:"Configuration",id:"configuration",level:2},{value:"Examples",id:"examples",level:2}],m={toc:u};function p(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,n.Z)({},m,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required ?"),(0,a.kt)("th",{parentName:"tr",align:null},"Note"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"...."),(0,a.kt)("td",{parentName:"tr",align:null},"MonacoEditorProps"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/react-monaco-editor/react-monaco-editor#properties"},"Properties")," of ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/react-monaco-editor/react-monaco-editor"},"react-monaco-editor"))))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)(r.default,{mdxType:"Tabs"},(0,a.kt)(i.default,{value:"JSX",label:"JSX",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport Layout from "@theme/Layout";\nimport MonacoEditor, { monaco } from "@theme/MonacoEditor";\n// import { useColorMode } from "@docusaurus/theme-common"\n\n// To have the monacco types\nimport type { MonacoEditorTypes } from "@theme/MonacoEditor";\n\nexport default function ExamplePage(): JSX.Element {\n  const editorRef =\n    React.useRef<null | MonacoEditorTypes.IStandaloneCodeEditor>(null);\n\n  function generateFakeData() {\n    const editor = editorRef.current;\n    if (editor) {\n      const randomPayload = [\n        { name: "test", luck: 42.0 },\n        { items: [{ id: 1, amount: 7, isValidated: true }] },\n        [1, 2, 3, 4, 5],\n      ];\n      // Set a value\n      editor.setValue(\n        JSON.stringify(\n          randomPayload[Math.floor(Math.random() * randomPayload.length)],\n          null,\n          "\\t"\n        )\n      );\n      // And a advanced method from monaco\n      monacoInstance.editor.setModelMarkers(\n        editor.getModel(),\n        "schema-validation",\n        []\n      );\n    }\n  }\n\n  // https://docusaurus.io/docs/api/themes/configuration#use-color-mode\n  return (\n    <Layout\n      title={`My custom Monaco Editor`}\n      description="Description will go into a meta tag in <head />"\n    >\n      <>\n        <div>\n          <button onClick={() => generateFakeData()}>Generate fake data</button>\n        </div>\n        {/* You can "useColorMode" if you want to take into account current Docusaurus color */}\n        <MonacoEditor\n          theme={"vs-dark"}\n          language="json"\n          editorDidMount={(editor) => {\n            editorRef.current = editor;\n          }}\n        />\n      </>\n    </Layout>\n  );\n}\n')))))}p.isMDXComponent=!0}}]);