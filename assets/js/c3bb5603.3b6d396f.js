"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[8717],{34392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=t(87462),a=(t(27378),t(3905));const i={title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",sidebar_position:1},r=void 0,s={unversionedId:"api/config",id:"api/config",title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",source:"@site/docs/api/config.mdx",sourceDirName:"api",slug:"/api/config",permalink:"/docusaurus-json-schema-plugin/docs/api/config",draft:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/api/config.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd6 API Reference",permalink:"/docusaurus-json-schema-plugin/docs/api"},next:{title:"\u270f\ufe0f @theme/JSONSchemaEditor",permalink:"/docusaurus-json-schema-plugin/docs/api/JSONSchemaEditor"}},u={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Types",id:"types",level:3},{value:"Example configuration",id:"example-configuration",level:2}],c={toc:l};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"monacoConfig")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"MonacoConfig")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,'{ "languages": ','["json"]'," }")),(0,a.kt)("td",{parentName:"tr",align:null},"To customize monaco editor, depending of your needs.")))),(0,a.kt)("h3",{id:"types"},"Types"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"type MonacoConfig = {\n    // More info on https://github.com/microsoft/monaco-editor/tree/main/webpack-plugin#options\n    /**\n     * Include only a subset of the languages supported.\n     * @default [\"json\"]\n     */\n    languages?: EditorLanguage[]\n    /**\n     * Custom languages (outside of the ones shipped with the `monaco-editor`).\n     */\n    customLanguages?: IFeatureDefinition[]\n    /**\n     * Include only a subset of the editor features.\n     * Use e.g. '!contextmenu' to exclude a certain feature.\n     * (By default, all features are enabled)\n     */\n    features?: (EditorFeature | NegatedEditorFeature)[]\n    /**\n     * Specify a filename template to use for generated files.\n     * Use e.g. '[name].worker.[contenthash].js' to include content-based hashes.\n     */\n    filename?: string\n    /**\n     * The absolute file system path to the monaco-editor npm module.\n     * Use e.g. `C:\\projects\\my-project\\node-modules\\monaco-editor`\n     */\n    monacoEditorPath?: string\n    /**\n     * Override the public path from which files generated by this plugin will be served.\n     * This wins out over Webpack's dynamic runtime path and can be useful to avoid attempting to load workers cross-\n     * origin when using a CDN for other static resources.\n     * Use e.g. '/' if you want to load your resources from the current origin.\n     */\n    publicPath?: string\n    /**\n     * Specify whether the editor API should be exposed through a global `monaco` object or not. This\n     * option is applicable to `0.22.0` and newer version of `monaco-editor`. Since `0.22.0`, the ESM\n     * version of the monaco editor does no longer define a global `monaco` object unless\n     * `global.MonacoEnvironment = { globalAPI: true }` is set\n     * @see https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#0220-29012021\n     */\n    globalAPI?: boolean\n}\n")),(0,a.kt)("h2",{id:"example-configuration"},"Example configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},"module.exports = {\n  themes: [\n    [\n      'docusaurus-json-schema-plugin',\n      {\n        monacoConfig: {\n          languages: [\"json\"]\n        }\n      },\n    ],\n  ],\n};\n")),(0,a.kt)("p",null,"// Example : ",(0,a.kt)("a",{parentName:"p",href:"https://lars-waechter.gitbook.io/voici.js/reference/api-reference/accumulation"},"https://lars-waechter.gitbook.io/voici.js/reference/api-reference/accumulation")))}d.isMDXComponent=!0}}]);