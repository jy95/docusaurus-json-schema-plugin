"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[5887],{19190:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=o(62540),i=o(28453);const s={title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",sidebar_position:1},a=void 0,r={id:"api/config",title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",source:"@site/docs/api/config.mdx",sourceDirName:"api",slug:"/api/config",permalink:"/docusaurus-json-schema-plugin/docs/api/config",draft:!1,unlisted:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/api/config.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u2699\ufe0f Theme Configuration",description:"Theme configuration of docusaurus-json-schema-plugin",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd6 API Reference",permalink:"/docusaurus-json-schema-plugin/docs/api"},next:{title:"\u270f\ufe0f @theme/JSONSchemaEditor",permalink:"/docusaurus-json-schema-plugin/docs/api/JSONSchemaEditor"}},c={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Types",id:"types",level:3},{value:"Example configuration",id:"example-configuration",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"monacoConfig"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"MonacoConfig"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)("code",{children:'{ "languages": ["json"] }'})}),(0,t.jsx)(n.td,{children:"To customize monaco editor, depending of your needs."})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"type MonacoConfig = {\n    // More info on https://github.com/microsoft/monaco-editor/tree/main/webpack-plugin#options\n    /**\n     * Include only a subset of the languages supported.\n     * @default [\"json\"]\n     */\n    languages?: EditorLanguage[]\n    /**\n     * Custom languages (outside of the ones shipped with the `monaco-editor`).\n     */\n    customLanguages?: IFeatureDefinition[]\n    /**\n     * Include only a subset of the editor features.\n     * Use e.g. '!contextmenu' to exclude a certain feature.\n     * (By default, all features are enabled)\n     */\n    features?: (EditorFeature | NegatedEditorFeature)[]\n    /**\n     * Specify a filename template to use for generated files.\n     * Use e.g. '[name].worker.[contenthash].js' to include content-based hashes.\n     */\n    filename?: string\n    /**\n     * The absolute file system path to the monaco-editor npm module.\n     * Use e.g. `C:\\projects\\my-project\\node-modules\\monaco-editor`\n     */\n    monacoEditorPath?: string\n    /**\n     * Override the public path from which files generated by this plugin will be served.\n     * This wins out over Webpack's dynamic runtime path and can be useful to avoid attempting to load workers cross-\n     * origin when using a CDN for other static resources.\n     * Use e.g. '/' if you want to load your resources from the current origin.\n     */\n    publicPath?: string\n    /**\n     * Specify whether the editor API should be exposed through a global `monaco` object or not. This\n     * option is applicable to `0.22.0` and newer version of `monaco-editor`. Since `0.22.0`, the ESM\n     * version of the monaco editor does no longer define a global `monaco` object unless\n     * `global.MonacoEnvironment = { globalAPI: true }` is set\n     * @see https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#0220-29012021\n     */\n    globalAPI?: boolean\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-configuration",children:"Example configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="docusaurus.config.js"',children:"module.exports = {\n  themes: [\n    [\n      'docusaurus-json-schema-plugin',\n      {\n        monacoConfig: {\n          languages: [\"json\"]\n        }\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["// Example : ",(0,t.jsx)(n.a,{href:"https://lars-waechter.gitbook.io/voici.js/reference/api-reference/accumulation",children:"https://lars-waechter.gitbook.io/voici.js/reference/api-reference/accumulation"})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);