"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[3699],{99478:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=n(87462),s=(n(27378),n(3905)),i=n(74866),o=n(85162);const r={title:"\u26a1 Quick Start",description:"Getting started with docusaurus-json-schema-plugin"},u=void 0,c={unversionedId:"quick-start",id:"quick-start",title:"\u26a1 Quick Start",description:"Getting started with docusaurus-json-schema-plugin",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/docusaurus-json-schema-plugin/docs/quick-start",draft:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/quick-start.mdx",tags:[],version:"current",frontMatter:{title:"\u26a1 Quick Start",description:"Getting started with docusaurus-json-schema-plugin"},sidebar:"tutorialSidebar",next:{title:"\ud83d\udca1 Demos",permalink:"/docusaurus-json-schema-plugin/docs/demo"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuring <code>docusaurus.config.js</code>",id:"configuring-docusaurusconfigjs",level:3},{value:"Configuring website <code>tsconfig.json</code>",id:"configuring-website-tsconfigjson",level:3},{value:"Usage",id:"usage",level:2},{value:"Output examples",id:"output-examples",level:2}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Getting started with ",(0,s.kt)("inlineCode",{parentName:"p"},"docusaurus-json-schema-plugin"))),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"Install ",(0,s.kt)("inlineCode",{parentName:"p"},"docusaurus-json-schema-plugin")," using your desired package manager :"),(0,s.kt)(i.default,{groupId:"npm2yarn",mdxType:"Tabs"},(0,s.kt)(o.default,{value:"npm",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install docusaurus-json-schema-plugin\n"))),(0,s.kt)(o.default,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add docusaurus-json-schema-plugin\n")))),(0,s.kt)("admonition",{title:"NPM only",type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"When installing with npm, add this to the previous command : ",(0,s.kt)("inlineCode",{parentName:"p"},"--prefer-dedupe")),(0,s.kt)("p",{parentName:"admonition"},"Why ",(0,s.kt)("inlineCode",{parentName:"p"},"--prefer-dedupe")," ? Because of ",(0,s.kt)("a",{parentName:"p",href:"https://reactjs.org/warnings/invalid-hook-call-warning.html"},"Invalid Hook Call Warning")," common issue in projets")),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("h3",{id:"configuring-docusaurusconfigjs"},"Configuring ",(0,s.kt)("inlineCode",{parentName:"h3"},"docusaurus.config.js")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},'{\n   // Allows use of @theme/JSONSchemaEditor or @theme/JSONSchemaViewer\n   themes: ["docusaurus-json-schema-plugin"],\n}\n')),(0,s.kt)("h3",{id:"configuring-website-tsconfigjson"},"Configuring website ",(0,s.kt)("inlineCode",{parentName:"h3"},"tsconfig.json")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n  "extends": "@tsconfig/docusaurus/tsconfig.json",\n  "compilerOptions": {\n    "baseUrl": ".",\n    "resolveJsonModule": true,\n    // Extending "@tsconfig/docusaurus/tsconfig.json".types with "docusaurus-json-schema-plugin"\n    "types": ["node", "@docusaurus/module-type-aliases", "@docusaurus/theme-classic", "docusaurus-json-schema-plugin"]\n  }\n}\n')),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"You are free to fetch your JSON Schema ",(0,s.kt)("strong",{parentName:"p"},"the way you want")),(0,s.kt)(i.default,{mdxType:"Tabs"},(0,s.kt)(o.default,{value:"staticAsset",label:"From a static asset",default:!0,mdxType:"TabItem"},(0,s.kt)("p",null,"Suppose you have the following asset defined :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/static/schemas/mySuperSchema.json"',title:'"/static/schemas/mySuperSchema.json"'},'{\n   "type":"array",\n   "description":"Represent a street address such as [\'1600\',\'Pennsylvania\',\'Avenue\',\'NW\']",\n   "items":false,\n   "prefixItems":[\n      {\n         "type":"number",\n         "description":"The address number"\n      },\n      {\n         "type":"string",\n         "description":"The name of the street"\n      },\n      {\n         "enum":[\n            "Street",\n            "Avenue",\n            "Boulevard"\n         ],\n         "description":"The type of street"\n      },\n      {\n         "enum":[\n            "NW",\n            "NE",\n            "SW",\n            "SE"\n         ],\n         "description":"The city quadrant of the address"\n      }\n   ]\n}\n')),(0,s.kt)("p",null,"Which you can use in your MDX pages as :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/docs/example.mdx"',title:'"/docs/example.mdx"'},'import CodeBlock from \'@theme/CodeBlock\';\nimport Schema from "@site/static/schemas/mySuperSchema.json";\n\n# My super Schema \n\n<JSONSchemaViewer schema={ Schema } />\n\n# Source :\n\n<CodeBlock language="json">{JSON.stringify(Schema, null, 2)}</CodeBlock>\n'))),(0,s.kt)(o.default,{value:"fetch",label:"From the web",mdxType:"TabItem"},(0,s.kt)("p",null,"Suppose your specifications are available somewhere ( ",(0,s.kt)("a",{parentName:"p",href:"https://gist.github.com/"},"Github Gists")," / ",(0,s.kt)("a",{parentName:"p",href:"https://bitbucket.org/snippets/new"},"Bitbucket Snippets")," / ... )  "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/pages/API.tsx"',title:'"/src/pages/API.tsx"'},'import React from "react"\nimport Layout from "@theme/Layout"\nimport JSONSchemaViewer from "@theme/JSONSchemaViewer"\n\nexport default function ExamplePage(): JSX.Element {\n    const [schema, setSchema] = React.useState(undefined as undefined | Error | unknown);\n\n    React.useEffect( () => {\n        fetch(\n            // TODO Your link here\n            "https://gist.githubusercontent.com/jy95/...",\n            {\n                headers: {\n                    \'Accept\': \'application/json\',\n                }\n            }\n        )\n            .then((response) => response.json())\n            .then((data) => setSchema(data))\n            .catch( (err) => setSchema(err) )\n    }, [schema])\n\n    return (\n        <Layout\n            title={`My super JSON Schema`}\n            description="Description will go into a meta tag in <head />"\n        >\n            {schema === undefined && <div>Loading ...</div>}\n            {schema !== undefined && schema instanceof Error && <div>Houston we have a problem : {schema.message}</div>}\n            {schema !== undefined && !(schema instanceof Error) && <JSONSchemaViewer schema={schema} />}\n        </Layout>\n    )\n}\n')),(0,s.kt)("p",null,"Which you can see by access related page (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"/API")," in that case )")),(0,s.kt)(o.default,{value:"other",label:"From ...",mdxType:"TabItem"},(0,s.kt)("p",null,"With the two previous ",(0,s.kt)("inlineCode",{parentName:"p"},"From")," sections, you get the point that there are unlimited possibilities :"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"JSON Schema directly defined in the code"),(0,s.kt)("li",{parentName:"ul"},"NPM packages that exports ",(0,s.kt)("a",{parentName:"li",href:"https://www.schemastore.org/json/"},"JSON Schema")," directly"),(0,s.kt)("li",{parentName:"ul"},"...")))),(0,s.kt)("h2",{id:"output-examples"},"Output examples"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"We have many examples available on ",(0,s.kt)("a",{parentName:"p",href:"demo/viewer"},"documentation")," . Check them to see lib in action \ud83d\ude09")))}d.isMDXComponent=!0}}]);