"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[1338,8811],{60431:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>C,contentTitle:()=>u,default:()=>w,frontMatter:()=>l,metadata:()=>h,toc:()=>x});var i=e(24246),s=e(11151),t=e(9286),o=e(78811),r=e(47718),m=e.n(r),c=e(74866),d=e(85162);const l={description:"array with contains / minContains / maxContains showcase",title:"\ud83d\udcca minContains & maxContains"},u="minContains & maxContains",h={id:"demo-viewer/array/minContainsAndMaxContains",title:"\ud83d\udcca minContains & maxContains",description:"array with contains / minContains / maxContains showcase",source:"@site/docs/demo-viewer/array/minContainsAndMaxContains.mdx",sourceDirName:"demo-viewer/array",slug:"/demo-viewer/array/minContainsAndMaxContains",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/minContainsAndMaxContains",draft:!1,unlisted:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/demo-viewer/array/minContainsAndMaxContains.mdx",tags:[],version:"current",frontMatter:{description:"array with contains / minContains / maxContains showcase",title:"\ud83d\udcca minContains & maxContains"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd0 Length",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/length"},next:{title:"\ud83d\udfe6 Simple",permalink:"/docusaurus-json-schema-plugin/docs/demo-viewer/array/simple"}},C={},x=[];function p(n){const a={h1:"h1",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"mincontains--maxcontains",children:"minContains & maxContains"}),"\n",(0,i.jsxs)(c.default,{children:[(0,i.jsx)(d.default,{value:"Viewer",label:"Viewer",default:!0,children:(0,i.jsx)(m(),{schema:o})}),(0,i.jsx)(d.default,{value:"JSON Schema",label:"JSON Schema",children:(0,i.jsx)(t.default,{language:"json-schema",children:JSON.stringify(o,null,2)})})]})]})}function w(n={}){const{wrapper:a}={...(0,s.a)(),...n.components};return a?(0,i.jsx)(a,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},78811:n=>{n.exports=JSON.parse('{"type":"array","contains":{"type":"number"},"minContains":2,"maxContains":3}')}}]);