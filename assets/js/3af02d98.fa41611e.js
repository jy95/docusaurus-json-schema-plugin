"use strict";(self.webpackChunktestsite=self.webpackChunktestsite||[]).push([[7073],{57839:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var r=t(24246),i=t(11151),s=t(74866),a=t(85162);const o={title:"\ud83d\udd0e @theme/JSONSchemaViewer",description:"@theme/JSONSchemaViewer API"},l=void 0,c={id:"api/JSONSchemaViewer",title:"\ud83d\udd0e @theme/JSONSchemaViewer",description:"@theme/JSONSchemaViewer API",source:"@site/docs/api/JSONSchemaViewer.mdx",sourceDirName:"api",slug:"/api/JSONSchemaViewer",permalink:"/docusaurus-json-schema-plugin/docs/api/JSONSchemaViewer",draft:!1,unlisted:!1,editUrl:"https://github.com/jy95/docusaurus-json-schema-plugin/tree/main/testsite/docs/api/JSONSchemaViewer.mdx",tags:[],version:"current",frontMatter:{title:"\ud83d\udd0e @theme/JSONSchemaViewer",description:"@theme/JSONSchemaViewer API"},sidebar:"tutorialSidebar",previous:{title:"\u270f\ufe0f @theme/JSONSchemaEditor",permalink:"/docusaurus-json-schema-plugin/docs/api/JSONSchemaEditor"},next:{title:"\ud83d\udd27 @theme/MonacoEditor",permalink:"/docusaurus-json-schema-plugin/docs/api/MonacoEditor"}},d={},m=[{value:"Configuration",id:"configuration",level:2},{value:"Types",id:"types",level:3},{value:"Examples",id:"examples",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required ?"}),(0,r.jsx)(n.th,{children:"Note"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"schema"}),(0,r.jsx)(n.td,{children:"JSONSchema"}),(0,r.jsx)(n.td,{children:"Mandatory"}),(0,r.jsx)(n.td,{children:"JSON Schema Draft-07 / Draft 2019-09 / Draft 2020-12"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"resolverOptions"}),(0,r.jsx)(n.td,{children:"IResolveOpts"}),(0,r.jsx)(n.td,{children:"Optional"}),(0,r.jsx)(n.td,{children:"To resolve your $ref (by default, only inline references will be dereferenced)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"viewerOptions"}),(0,r.jsx)(n.td,{children:"JSVOptions"}),(0,r.jsx)(n.td,{children:"Optional"}),(0,r.jsx)(n.td,{children:"Options for the viewer itself."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Either Draft-07 / Draft 2019-09 / Draft 2020-12\ntype JSONSchema = unknown\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'type IResolveOpts = {\n    // "IResolveOpts" options from @stoplightio/json-ref-resolver\n    // More info on https://github.com/stoplightio/json-ref-resolver\n    // https://github.com/stoplightio/json-ref-resolver/blob/master/src/types.ts\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'type JSVOptions = {\n   /**\n   * Should we display "examples" ?\n   * @default false\n   */\n    showExamples?: boolean\n    /**\n     * To overwrite the order to display qualifier messages\n     * @default ["nullable","deprecated","readOnly","writeOnly","enum","stringLength","objectProperties","no-extra-properties","arrayItems","arrayContains","no-extra-items","number-range","pattern","multipleOf","uniqueItems","contentEncoding","contentMediaType","contentSchema","default","const","examples"]\n     */\n    qualifierMessagesOrder?: CheckKey[]\n    /**\n     * To overwrite the printout of "description"\n     * By default, print out as provided\n     * @default undefined\n     */\n    DescriptionComponent?: (params: { description: string }) => JSX.Element\n    /**\n     * To overwrite the printout of "examples", "default", "const", and "enum"\n     * By default, print out as provided\n     * @default undefined\n     */\n    ValueComponent?: (params: { value: unknown; schema: JSONSchema }) => JSX.Element\n    /**\n     * To overwrite the default handling of unresolved $refs\n     * By default, print out as provided\n     * @default undefined\n     */\n    UnresolvedRefsComponent?: (params: { schema: JSONSchema }) => JSX.Element\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'type CheckKey =\n  | "nullable"\n  | "deprecated"\n  | "readOnly"\n  | "writeOnly"\n  | "enum"\n// minLength / maxLength\n  | "stringLength"\n// minProperties / maxProperties\n  | "objectProperties"\n  | "no-extra-properties"\n// minItems / maxItems\n  | "arrayItems"\n// minContains / maxContains\n  | "arrayContains"\n  | "no-extra-items"\n// minimum / exclusiveMinimum / maximum / exclusiveMaximum\n  | "number-range"\n  | "pattern"\n  | "multipleOf"\n  | "uniqueItems"\n  | "default"\n  | "const"\n  | "examples"\n  | "contentMediaType"\n  | "contentEncoding"\n  | "contentSchema"\n// For unsolved recursive refs ($ref, $dynamicRef, ...)\n  | "unsolvedRefs"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(s.default,{children:[(0,r.jsx)(a.default,{value:"JSX",label:"JSX",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import React from "react"\nimport Layout from "@theme/Layout"\nimport JSONSchemaViewer from "@theme/JSONSchemaViewer"\n\nexport default function ExamplePage(): JSX.Element {\n\n    // You are free to fetch your schema in your own way (load local file, fetch, ...) :)\n    const mySchema = {\n        "type": "object",\n        "properties": {\n            "builtin": {\n                "type": "number"\n            }\n        },\n        "patternProperties": {\n            "^S_": {\n                "type": "string"\n            },\n            "^I_": {\n                "type": "integer"\n            }\n        },\n        "additionalProperties": {\n            "type": "string"\n        }\n    }\n\n    return (\n        <Layout\n            title={`My super JSON Schema`}\n            description="Description will go into a meta tag in <head />"\n        >\n            <JSONSchemaViewer schema={mySchema} />\n        </Layout>\n    )\n}\n'})})}),(0,r.jsx)(a.default,{value:"MDX",label:"MDX",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'\nimport CodeBlock from \'@theme/CodeBlock\';\n// To fetch a JSON file from your static folder\nimport Schema from "@site/static/schemas/examples/array/tuples.json";\nimport JSONSchemaViewer from "@theme/JSONSchemaViewer";\n\n# Tuples\n\nViewer :\n\n<JSONSchemaViewer schema={ Schema  } />\n\nSource :\n\n<CodeBlock language="json">{JSON.stringify(Schema, null, 2)}</CodeBlock>\n\n'})})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);