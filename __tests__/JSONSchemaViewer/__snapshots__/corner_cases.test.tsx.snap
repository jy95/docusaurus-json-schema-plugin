// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`JSONSchemaViewer - corner cases CreateArray - invalid usage of Additional Items 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    array
  </span>
  <ul>
    <li
      data-level="1"
      id="/items"
    >
      <details>
        <summary>
          <code>
            items[x]
          </code>
          Â 
          <span
            style="opacity: 0.6;"
          >
            string
          </span>
        </summary>
        <div>
          <div>
            <strong>
              type
            </strong>
            Â :Â 
            <span
              style="opacity: 0.6;"
            >
              string
            </span>
            <div
              style="margin-top: var(--ifm-table-cell-padding);"
            />
          </div>
        </div>
      </details>
    </li>
  </ul>
  <ul>
    <li
      data-level="1"
      id="/additionalItems"
    >
      <details>
        <summary>
          <code>
            items[1,...]
          </code>
          Â 
          <span
            style="opacity: 0.6;"
          >
            boolean
          </span>
        </summary>
        <div>
          <div>
            <strong>
              type
            </strong>
            Â :Â 
            <span
              style="opacity: 0.6;"
            >
              boolean
            </span>
            <div
              style="margin-top: var(--ifm-table-cell-padding);"
            />
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  />
</DocumentFragment>
`;

exports[`JSONSchemaViewer - corner cases CreateArray - sub properties as boolean schema 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    array
  </span>
  <ul>
    <li
      data-level="1"
      id="/prefixItems"
    >
      <details>
        <summary>
          <code>
            items[0]
          </code>
          Â 
          <span
            style="opacity: 0.6;"
          >
            none
          </span>
        </summary>
        <div>
          <div>
            <strong>
              type
            </strong>
            Â :Â 
            <span
              style="opacity: 0.6;"
            >
              none
            </span>
            <div
              style="margin-top: var(--ifm-table-cell-padding);"
            >
              Always invalid
            </div>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <ul>
    <li
      data-level="1"
      id="/items"
    >
      <details>
        <summary>
          <code>
            items[x]
          </code>
          Â 
          <span
            style="opacity: 0.6;"
          >
            none
          </span>
        </summary>
        <div>
          <div>
            <strong>
              type
            </strong>
            Â :Â 
            <span
              style="opacity: 0.6;"
            >
              none
            </span>
            <div
              style="margin-top: var(--ifm-table-cell-padding);"
            >
              Always invalid
            </div>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <ul>
    <li
      data-level="1"
      id="/contains"
    >
      <details>
        <summary>
          <code>
            items[..., x, ...]
          </code>
          Â 
          <span
            style="opacity: 0.6;"
          >
            none
          </span>
        </summary>
        <div>
          <div>
            <strong>
              type
            </strong>
            Â :Â 
            <span
              style="opacity: 0.6;"
            >
              none
            </span>
            <div
              style="margin-top: var(--ifm-table-cell-padding);"
            >
              Always invalid
            </div>
          </div>
        </div>
      </details>
    </li>
  </ul>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  >
    <div>
      ðŸš¨Â No extra item(s) are authorized in this array
    </div>
  </div>
</DocumentFragment>
`;

exports[`JSONSchemaViewer - corner cases CreateNodes - boolean schema (false) 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    none
  </span>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  >
    Always invalid
  </div>
</DocumentFragment>
`;

exports[`JSONSchemaViewer - corner cases CreateNodes - boolean schema (true) 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    any
  </span>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  >
    Always valid
  </div>
</DocumentFragment>
`;

exports[`JSONSchemaViewer - corner cases CreateObject - missing pattern in propertyNames 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    object
  </span>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  />
</DocumentFragment>
`;

exports[`JSONSchemaViewer - corner cases CreateObject - sub properties as boolean schema 1`] = `
<DocumentFragment>
  <strong>
    type
  </strong>
  Â :Â 
  <span
    style="opacity: 0.6;"
  >
    object
  </span>
  <div
    style="margin-top: var(--ifm-table-cell-padding);"
  >
    <div>
      ðŸš¨Â No extra propertie(s) are authorized in this object
    </div>
  </div>
</DocumentFragment>
`;
